swagger: "2.0"
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: "1.0.0"
  termsOfService: "http://swagger.io/terms/"
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: "#/definitions/Login"
      produces:
        - application/json
      responses:
        "200":
          description: Login Successfully
          schema:
            $ref: "#/definitions/LoginResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: "#/definitions/User"
      produces:
        - application/json
      responses:
        "200":
          description: Signup Successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      #produces:
      # - application/json
      responses:
        "200":
          description: User profile retrieved successully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: "#/definitions/UserProfile"
      produces:
        - application/json
      responses:
        "200":
          description: User profile retrieved successully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  #Ajouts des endpoints pour la phase 2
  /user/bankaccount/{bankAccountId}:
    get:
      tags:
        - User Module
      summary: Read user's bank account
      description: Retrieve a user's bank account
      parameters:
        - name: bankAccountId
          in: path
          description: ID of the user's bank account to retrieve
          required: true
          type: string
      responses:
        "200":
          description: User's bank account retrieved successfully
          schema:
            $ref: "#/definitions/Account"
        "400":
          description: Invalid Fields
        "404":
          description: User not found
        "500":
          description: Internal Server Error
  /user/bankaccount/transaction/{bankAccountId}:
    get:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: Retrieve a user's transaction
      description: Retrieve a transaction from the user's bank account
      parameters:
        - name: bankAccountId
          in: path
          description: ID of the user's bank account to retrieve the transaction from
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: Transaction profile retrieved successfully
          schema:
            $ref: "#/definitions/TransactionsResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/transaction/{transactionId}:
    get:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: Read a selected transaction
      description: API for reading a selected transaction
      parameters:
        - name: transactionId
          in: path
          description: ID of the transaction to retrieve
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: Transaction profile retrieved successfully
          schema:
            $ref: "#/definitions/TransactionResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/transaction/comment/{transactionId}:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: Add User Transaction Comment API
      description: API for adding a comment to the transaction
      parameters:
        - in: body
          name: body
          description: New Transaction comment Payload
          required: true
          schema:
            $ref: "#/definitions/TransactionComment"
      produces:
        - application/json
      responses:
        "200":
          description: Transaction profile added successfully with a comment
          schema:
            $ref: "#/definitions/TransactionCommentResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error

    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: Update User Transaction Comment API
      description: API for updating the comment in a user's transaction
      parameters:
        - in: body
          name: body
          description: Update comment for the user transaction
          required: true
          schema:
            $ref: "#/definitions/TransactionComment"
      produces:
        - application/json
      responses:
        "200":
          description: User transaction comment updated successfully
          schema:
            $ref: "#/definitions/TransactionCommentResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error

    delete:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: Delete User Transaction Comment API
      description: API for deleting a comment in a user's transaction
      parameters:
        - name: transactionId
          in: path
          description: ID of the transaction with the comment to delete
          required: true
          type: string
          produces:
            - application/json
      responses:
        "200":
          description: User transaction comment deleted successfully
          schema:
            $ref: "#/definitions/TransactionCommentResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
# Fin des ajouts
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user public name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      userName:
        type: string
  Account:
    type: object
    properties:
      bankAccountId:
        type: string
        description: Unique identifier for the bank account.
      body:
        type: object
        properties:
          balance:
            type: number
            description: Current balance of the account.
  TransactionsResponse:
    type: object
    properties:
      numberOfTransactions:
        type: number
        description: Number of transactions in the response.
      transaction:
        type: object
        properties:
          transactionId:
            type: string
            description: Unique identifier for the transaction.
          date:
            type: string
            description: Date of the transaction.
          amount:
            type: number
            description: Transaction amount.
          place:
            type: string
            description: Location or description of the transaction.
          balance:
            type: number
            description: Account balance after the transaction.
  TransactionResponse:
    type: object
    properties:
      transactionType:
        type: string
        description: Type of the transaction.
      category:
        type: string
        description: Category of the transaction.
      comment:
        type: string
        description: Additional comment or notes for the transaction.
  TransactionCommentResponse:
    properties:
      comment:
        type: string
        description: Comment associated with the transaction.